name: hydrun CI


on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ${{ matrix.target.runner }}
    permissions:
      id-token: write
      contents: read
      attestations: write
    strategy:
      matrix:
        target:
          # Binaries
          - id: c.ipxe
            src: .
            os: debian:bookworm
            flags: -e '-v /tmp/ccache:/root/.cache/ccache'
            cmd: ./Hydrunfile c
            dst: out/*
            runner: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore ccache
        uses: actions/cache/restore@v4
        with:
          path: |
            /tmp/ccache
          key: cache-ccache-${{ matrix.target.id }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up hydrun
        run: |
          curl -L -o /tmp/hydrun "https://github.com/pojntfx/hydrun/releases/latest/download/hydrun.linux-$(uname -m)"
          sudo install /tmp/hydrun /usr/local/bin
      - name: Build with hydrun
        working-directory: ${{ matrix.target.src }}
        run: hydrun -o ${{ matrix.target.os }} ${{ matrix.target.flags }} "${{ matrix.target.cmd }}"
      - name: Fix permissions for output
        run: sudo chown -R $USER .
      - name: Save ccache
        uses: actions/cache/save@v4
        with:
          path: |
            /tmp/ccache
          key: cache-ccache-${{ matrix.target.id }}
      - name: Attest output
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: ${{ matrix.target.dst }}

      - name: Upload output
        uses: actions/upload-artifact@v4
        with:
          path: ${{ matrix.target.dst }}

  publish-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download output
        uses: actions/download-artifact@v4
        with:
          path: /tmp/out
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
        
      - name: Publish pre-release to GitHub releases
        if: startsWith(github.ref, 'refs/heads/main')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ steps.extract_branch.outputs.branch }}
          prerelease: true
          files: |
            /tmp/out/*/*

      - name: Publish release to GitHub releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          files: |
            /tmp/out/*/*
